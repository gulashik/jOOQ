/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.daos


import java.time.LocalDate

import javax.annotation.processing.Generated

import jooq.generated.tables.Productline
import jooq.generated.tables.records.ProductlineRecord

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.Record2
import org.jooq.XML
import org.jooq.impl.DAOImpl
import org.springframework.stereotype.Repository


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
@Repository
open class ProductlineDao(configuration: Configuration?) : DAOImpl<ProductlineRecord, jooq.generated.tables.pojos.Productline, Record2<String?, Long?>>(Productline.PRODUCTLINE, jooq.generated.tables.pojos.Productline::class.java, configuration) {

    /**
     * Create a new ProductlineDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: jooq.generated.tables.pojos.Productline): Record2<String?, Long?> = compositeKeyRecord(o.productLine, o.code)

    /**
     * Fetch records that have <code>product_line BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProductLine(lowerInclusive: String, upperInclusive: String): List<jooq.generated.tables.pojos.Productline> = fetchRange(Productline.PRODUCTLINE.PRODUCT_LINE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>product_line IN (values)</code>
     */
    fun fetchByProductLine(vararg values: String): List<jooq.generated.tables.pojos.Productline> = fetch(Productline.PRODUCTLINE.PRODUCT_LINE, *values)

    /**
     * Fetch a unique record that has <code>product_line = value</code>
     */
    fun fetchOneByProductLine(value: String): jooq.generated.tables.pojos.Productline? = fetchOne(Productline.PRODUCTLINE.PRODUCT_LINE, value)

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCode(lowerInclusive: Long, upperInclusive: Long): List<jooq.generated.tables.pojos.Productline> = fetchRange(Productline.PRODUCTLINE.CODE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    fun fetchByCode(vararg values: Long): List<jooq.generated.tables.pojos.Productline> = fetch(Productline.PRODUCTLINE.CODE, *values.toTypedArray())

    /**
     * Fetch records that have <code>text_description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTextDescription(lowerInclusive: String?, upperInclusive: String?): List<jooq.generated.tables.pojos.Productline> = fetchRange(Productline.PRODUCTLINE.TEXT_DESCRIPTION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>text_description IN (values)</code>
     */
    fun fetchByTextDescription(vararg values: String): List<jooq.generated.tables.pojos.Productline> = fetch(Productline.PRODUCTLINE.TEXT_DESCRIPTION, *values)

    /**
     * Fetch records that have <code>html_description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfHtmlDescription(lowerInclusive: XML?, upperInclusive: XML?): List<jooq.generated.tables.pojos.Productline> = fetchRange(Productline.PRODUCTLINE.HTML_DESCRIPTION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>html_description IN (values)</code>
     */
    fun fetchByHtmlDescription(vararg values: XML): List<jooq.generated.tables.pojos.Productline> = fetch(Productline.PRODUCTLINE.HTML_DESCRIPTION, *values)

    /**
     * Fetch records that have <code>image BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfImage(lowerInclusive: ByteArray?, upperInclusive: ByteArray?): List<jooq.generated.tables.pojos.Productline> = fetchRange(Productline.PRODUCTLINE.IMAGE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>image IN (values)</code>
     */
    fun fetchByImage(vararg values: ByteArray): List<jooq.generated.tables.pojos.Productline> = fetch(Productline.PRODUCTLINE.IMAGE, *values)

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedOn(lowerInclusive: LocalDate?, upperInclusive: LocalDate?): List<jooq.generated.tables.pojos.Productline> = fetchRange(Productline.PRODUCTLINE.CREATED_ON, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    fun fetchByCreatedOn(vararg values: LocalDate): List<jooq.generated.tables.pojos.Productline> = fetch(Productline.PRODUCTLINE.CREATED_ON, *values)
}
