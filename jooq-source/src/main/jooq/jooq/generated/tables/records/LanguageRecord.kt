/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records


import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import javax.annotation.processing.Generated

import jooq.generated.tables.Language
import jooq.generated.tables.interfaces.ILanguage

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class LanguageRecord private constructor() : UpdatableRecordImpl<LanguageRecord>(Language.LANGUAGE), ILanguage {

    @get:NotNull
    open override var id: Int
        set(value): Unit = set(0, value)
        get(): Int = get(0) as Int

    @get:NotNull
    @get:Size(max = 2)
    open override var cd: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    @get:Size(max = 50)
    open override var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: ILanguage) {
        this.id = from.id
        this.cd = from.cd
        this.description = from.description
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised LanguageRecord
     */
    constructor(id: Int, cd: String, description: String? = null): this() {
        this.id = id
        this.cd = cd
        this.description = description
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised LanguageRecord
     */
    constructor(value: jooq.generated.tables.pojos.Language?): this() {
        if (value != null) {
            this.id = value.id
            this.cd = value.cd
            this.description = value.description
            resetChangedOnNotNull()
        }
    }
}
