/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.pojos


import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import java.math.BigDecimal

import javax.annotation.processing.Generated

import jooq.generated.tables.interfaces.IProduct


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class Product(
    override var productId: Long? = null,
    @get:Size(max = 70)
    override var productName: String? = null,
    @get:Size(max = 50)
    override var productLine: String? = null,
    @get:NotNull
    override var code: Long,
    @get:Size(max = 10)
    override var productScale: String? = null,
    @get:Size(max = 50)
    override var productVendor: String? = null,
    override var productDescription: String? = null,
    override var quantityInStock: Int? = null,
    override var buyPrice: BigDecimal? = null,
    override var msrp: BigDecimal? = null,
    override var specs: Any? = null,
    override var productUid: Long? = null
): IProduct {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Product = other as Product
        if (this.productId == null) {
            if (o.productId != null)
                return false
        }
        else if (this.productId != o.productId)
            return false
        if (this.productName == null) {
            if (o.productName != null)
                return false
        }
        else if (this.productName != o.productName)
            return false
        if (this.productLine == null) {
            if (o.productLine != null)
                return false
        }
        else if (this.productLine != o.productLine)
            return false
        if (this.code != o.code)
            return false
        if (this.productScale == null) {
            if (o.productScale != null)
                return false
        }
        else if (this.productScale != o.productScale)
            return false
        if (this.productVendor == null) {
            if (o.productVendor != null)
                return false
        }
        else if (this.productVendor != o.productVendor)
            return false
        if (this.productDescription == null) {
            if (o.productDescription != null)
                return false
        }
        else if (this.productDescription != o.productDescription)
            return false
        if (this.quantityInStock == null) {
            if (o.quantityInStock != null)
                return false
        }
        else if (this.quantityInStock != o.quantityInStock)
            return false
        if (this.buyPrice == null) {
            if (o.buyPrice != null)
                return false
        }
        else if (this.buyPrice != o.buyPrice)
            return false
        if (this.msrp == null) {
            if (o.msrp != null)
                return false
        }
        else if (this.msrp != o.msrp)
            return false
        if (this.specs == null) {
            if (o.specs != null)
                return false
        }
        else if (this.specs != o.specs)
            return false
        if (this.productUid == null) {
            if (o.productUid != null)
                return false
        }
        else if (this.productUid != o.productUid)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.productId == null) 0 else this.productId.hashCode())
        result = prime * result + (if (this.productName == null) 0 else this.productName.hashCode())
        result = prime * result + (if (this.productLine == null) 0 else this.productLine.hashCode())
        result = prime * result + this.code.hashCode()
        result = prime * result + (if (this.productScale == null) 0 else this.productScale.hashCode())
        result = prime * result + (if (this.productVendor == null) 0 else this.productVendor.hashCode())
        result = prime * result + (if (this.productDescription == null) 0 else this.productDescription.hashCode())
        result = prime * result + (if (this.quantityInStock == null) 0 else this.quantityInStock.hashCode())
        result = prime * result + (if (this.buyPrice == null) 0 else this.buyPrice.hashCode())
        result = prime * result + (if (this.msrp == null) 0 else this.msrp.hashCode())
        result = prime * result + (if (this.specs == null) 0 else this.specs.hashCode())
        result = prime * result + (if (this.productUid == null) 0 else this.productUid.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Product (")

        sb.append(productId)
        sb.append(", ").append(productName)
        sb.append(", ").append(productLine)
        sb.append(", ").append(code)
        sb.append(", ").append(productScale)
        sb.append(", ").append(productVendor)
        sb.append(", ").append(productDescription)
        sb.append(", ").append(quantityInStock)
        sb.append(", ").append(buyPrice)
        sb.append(", ").append(msrp)
        sb.append(", ").append(specs)
        sb.append(", ").append(productUid)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IProduct) {
        this.productId = from.productId
        this.productName = from.productName
        this.productLine = from.productLine
        this.code = from.code
        this.productScale = from.productScale
        this.productVendor = from.productVendor
        this.productDescription = from.productDescription
        this.quantityInStock = from.quantityInStock
        this.buyPrice = from.buyPrice
        this.msrp = from.msrp
        this.specs = from.specs
        this.productUid = from.productUid
    }
}
