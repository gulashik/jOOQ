/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.pojos


import javax.annotation.processing.Generated

import jooq.generated.tables.interfaces.IGetOfficesMultiple

import org.jooq.Record
import org.jooq.Result


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class GetOfficesMultiple(
    override var getOfficesMultiple: Result<Record>? = null
): IGetOfficesMultiple {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: GetOfficesMultiple = other as GetOfficesMultiple
        if (this.getOfficesMultiple == null) {
            if (o.getOfficesMultiple != null)
                return false
        }
        else if (this.getOfficesMultiple != o.getOfficesMultiple)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.getOfficesMultiple == null) 0 else this.getOfficesMultiple.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("GetOfficesMultiple (")

        sb.append(getOfficesMultiple)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IGetOfficesMultiple) {
        this.getOfficesMultiple = from.getOfficesMultiple
    }
}
