/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.pojos


import javax.annotation.processing.Generated

import jooq.generated.tables.interfaces.IProductOfProductLine


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class ProductOfProductLine(
    override var pId: Long? = null,
    override var pName: String? = null,
    override var pLine: String? = null
): IProductOfProductLine {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: ProductOfProductLine = other as ProductOfProductLine
        if (this.pId == null) {
            if (o.pId != null)
                return false
        }
        else if (this.pId != o.pId)
            return false
        if (this.pName == null) {
            if (o.pName != null)
                return false
        }
        else if (this.pName != o.pName)
            return false
        if (this.pLine == null) {
            if (o.pLine != null)
                return false
        }
        else if (this.pLine != o.pLine)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.pId == null) 0 else this.pId.hashCode())
        result = prime * result + (if (this.pName == null) 0 else this.pName.hashCode())
        result = prime * result + (if (this.pLine == null) 0 else this.pLine.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("ProductOfProductLine (")

        sb.append(pId)
        sb.append(", ").append(pName)
        sb.append(", ").append(pLine)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IProductOfProductLine) {
        this.pId = from.pId
        this.pName = from.pName
        this.pLine = from.pLine
    }
}
