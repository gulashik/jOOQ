/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.pojos


import javax.annotation.processing.Generated

import jooq.generated.tables.interfaces.IEach


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class Each(
    override var key: String? = null,
    override var value: String? = null
): IEach {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Each = other as Each
        if (this.key == null) {
            if (o.key != null)
                return false
        }
        else if (this.key != o.key)
            return false
        if (this.value == null) {
            if (o.value != null)
                return false
        }
        else if (this.value != o.value)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.key == null) 0 else this.key.hashCode())
        result = prime * result + (if (this.value == null) 0 else this.value.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Each (")

        sb.append(key)
        sb.append(", ").append(value)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IEach) {
        this.key = from.key
        this.value = from.value
    }
}
