/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.pojos


import jakarta.validation.constraints.NotNull

import java.math.BigDecimal

import javax.annotation.processing.Generated

import jooq.generated.tables.interfaces.IOrderdetail


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class Orderdetail(
    override var orderdetailId: Int? = null,
    @get:NotNull
    override var orderId: Long,
    @get:NotNull
    override var productId: Long,
    @get:NotNull
    override var quantityOrdered: Int,
    @get:NotNull
    override var priceEach: BigDecimal,
    @get:NotNull
    override var orderLineNumber: Int
): IOrderdetail {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Orderdetail = other as Orderdetail
        if (this.orderdetailId == null) {
            if (o.orderdetailId != null)
                return false
        }
        else if (this.orderdetailId != o.orderdetailId)
            return false
        if (this.orderId != o.orderId)
            return false
        if (this.productId != o.productId)
            return false
        if (this.quantityOrdered != o.quantityOrdered)
            return false
        if (this.priceEach != o.priceEach)
            return false
        if (this.orderLineNumber != o.orderLineNumber)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.orderdetailId == null) 0 else this.orderdetailId.hashCode())
        result = prime * result + this.orderId.hashCode()
        result = prime * result + this.productId.hashCode()
        result = prime * result + this.quantityOrdered.hashCode()
        result = prime * result + this.priceEach.hashCode()
        result = prime * result + this.orderLineNumber.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Orderdetail (")

        sb.append(orderdetailId)
        sb.append(", ").append(orderId)
        sb.append(", ").append(productId)
        sb.append(", ").append(quantityOrdered)
        sb.append(", ").append(priceEach)
        sb.append(", ").append(orderLineNumber)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IOrderdetail) {
        this.orderdetailId = from.orderdetailId
        this.orderId = from.orderId
        this.productId = from.productId
        this.quantityOrdered = from.quantityOrdered
        this.priceEach = from.priceEach
        this.orderLineNumber = from.orderLineNumber
    }
}
