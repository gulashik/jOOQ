/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.pojos


import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import java.math.BigDecimal

import javax.annotation.processing.Generated

import jooq.generated.tables.interfaces.ICustomer


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class Customer(
    override var customerNumber: Long? = null,
    @get:NotNull
    @get:Size(max = 50)
    override var customerName: String,
    @get:NotNull
    @get:Size(max = 50)
    override var contactLastName: String,
    @get:NotNull
    @get:Size(max = 50)
    override var contactFirstName: String,
    @get:NotNull
    @get:Size(max = 50)
    override var phone: String,
    override var salesRepEmployeeNumber: Long? = null,
    override var creditLimit: BigDecimal? = null,
    override var firstBuyDate: Int? = null
): ICustomer {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Customer = other as Customer
        if (this.customerNumber == null) {
            if (o.customerNumber != null)
                return false
        }
        else if (this.customerNumber != o.customerNumber)
            return false
        if (this.customerName != o.customerName)
            return false
        if (this.contactLastName != o.contactLastName)
            return false
        if (this.contactFirstName != o.contactFirstName)
            return false
        if (this.phone != o.phone)
            return false
        if (this.salesRepEmployeeNumber == null) {
            if (o.salesRepEmployeeNumber != null)
                return false
        }
        else if (this.salesRepEmployeeNumber != o.salesRepEmployeeNumber)
            return false
        if (this.creditLimit == null) {
            if (o.creditLimit != null)
                return false
        }
        else if (this.creditLimit != o.creditLimit)
            return false
        if (this.firstBuyDate == null) {
            if (o.firstBuyDate != null)
                return false
        }
        else if (this.firstBuyDate != o.firstBuyDate)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.customerNumber == null) 0 else this.customerNumber.hashCode())
        result = prime * result + this.customerName.hashCode()
        result = prime * result + this.contactLastName.hashCode()
        result = prime * result + this.contactFirstName.hashCode()
        result = prime * result + this.phone.hashCode()
        result = prime * result + (if (this.salesRepEmployeeNumber == null) 0 else this.salesRepEmployeeNumber.hashCode())
        result = prime * result + (if (this.creditLimit == null) 0 else this.creditLimit.hashCode())
        result = prime * result + (if (this.firstBuyDate == null) 0 else this.firstBuyDate.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Customer (")

        sb.append(customerNumber)
        sb.append(", ").append(customerName)
        sb.append(", ").append(contactLastName)
        sb.append(", ").append(contactFirstName)
        sb.append(", ").append(phone)
        sb.append(", ").append(salesRepEmployeeNumber)
        sb.append(", ").append(creditLimit)
        sb.append(", ").append(firstBuyDate)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: ICustomer) {
        this.customerNumber = from.customerNumber
        this.customerName = from.customerName
        this.contactLastName = from.contactLastName
        this.contactFirstName = from.contactFirstName
        this.phone = from.phone
        this.salesRepEmployeeNumber = from.salesRepEmployeeNumber
        this.creditLimit = from.creditLimit
        this.firstBuyDate = from.firstBuyDate
    }
}
