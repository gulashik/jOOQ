/*
 * This file is generated by jOOQ.
 */
package jooq.generated.udt.pojos


import javax.annotation.processing.Generated

import jooq.generated.udt.interfaces.IEvaluationCriteria


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.14",
        "schema version:1.2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class EvaluationCriteria(
    override var communicationAbility: Int? = null,
    override var ethics: Int? = null,
    override var performance: Int? = null,
    override var employeeInput: Int? = null
): IEvaluationCriteria {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: EvaluationCriteria = other as EvaluationCriteria
        if (this.communicationAbility == null) {
            if (o.communicationAbility != null)
                return false
        }
        else if (this.communicationAbility != o.communicationAbility)
            return false
        if (this.ethics == null) {
            if (o.ethics != null)
                return false
        }
        else if (this.ethics != o.ethics)
            return false
        if (this.performance == null) {
            if (o.performance != null)
                return false
        }
        else if (this.performance != o.performance)
            return false
        if (this.employeeInput == null) {
            if (o.employeeInput != null)
                return false
        }
        else if (this.employeeInput != o.employeeInput)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.communicationAbility == null) 0 else this.communicationAbility.hashCode())
        result = prime * result + (if (this.ethics == null) 0 else this.ethics.hashCode())
        result = prime * result + (if (this.performance == null) 0 else this.performance.hashCode())
        result = prime * result + (if (this.employeeInput == null) 0 else this.employeeInput.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("EvaluationCriteria (")

        sb.append(communicationAbility)
        sb.append(", ").append(ethics)
        sb.append(", ").append(performance)
        sb.append(", ").append(employeeInput)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IEvaluationCriteria) {
        this.communicationAbility = from.communicationAbility
        this.ethics = from.ethics
        this.performance = from.performance
        this.employeeInput = from.employeeInput
    }
}
